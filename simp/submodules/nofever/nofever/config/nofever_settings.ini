# These are nofever settings used by NoFever system.
# If you want the system to use the default settings, delete this config named "nofever_settings.ini",
# The system will automatically apply default settings and copy them into a newly created "nofever_settings.ini".
[main]
# IMPORTANT: Setting WALL_MOUNT_VERSION to True will use static version of #NoFever, made for wall-mounted solution.
WALL_MOUNT_VERSION = False
# string. IP address of the APP server (Jetson)
IP_ADDRESS = 10.42.0.1
# string. Port of the APP server (Jetson)
PORT = 5000
# integer. How often to check if nofever process is alive. If its dead -> some error occured, do a system reboot.
PID_CHECK_FREQUENCE_SECONDS = 40
# string. Relative (from nofever root) path to pid.txt file that stores PID of the current running NoFever process.
PID_PATH = config/pid.txt

[git_pusher]
# integer. How often to push scan_info.txt to git repo.
SCAN_GIT_PUSHER_FREQUENCE_SECONDS = 3600
# string. GitHub account name where scans are stored.
USERNAME = reallyarobot
# string. GitHub pass name where scans are stored.
PASSWORD = WNR7HLM2m6vP5aJ
# string. GitHub relative link to the repo where scans are stored.
REMOTE_LINK = github.com/reallyarobot/nofever_usage.git

[algorithm]
#  IMPORTANT: Enable (True) or disable (False) Label Printer in NoFever.
LABEL_PRINTER_ENABLED = False
#  IMPORTANT: Enable (True) or disable (False) counting and saving scan number to a text file
SCAN_COUNTING_ENABLED = True

#======== STATIC NOFEVER VARIABLES ========
# meters. Detections closer to NoFever screen than ACTIVATION_ZONE will enable the system (Frontal camera)
ACTIVATION_ZONE = 1
# meters. Distance within which a user must stay in order to start measuremement block
STATIC_FINAL_DIST_THR = 0.3
# counter. How many detections in a row must be in a required range in order to start measuremement block
# NOTE: # it is actually always +1 in total. Because takes dist_forehead_prev into account too.
STATIC_FINAL_DIST_CNT_MAX = 1
# seconds. How many seconds have to pass with no new detections before going to a standby loop
STATIC_TIMER_NO_NEW_DETECTIONS = 3
# meters forward (z+)
S_FINAL_DIST_THR = 0.35
# +1 (takes previous into account)  
S_FINAL_DIST_CNT_MAX = 1
# meters upwards (y-)
FINAL_HEIGHT_UP_THR = -0.01
# meters downwards (y+)
FINAL_HEIGHT_DOWN_THR = 0.02
# +1 (takes previous into account)
FINAL_HEIGHT_CNT_MAX = 1
# meters to left side (x-)
FINAL_SIDE_LEFT_THR = -0.05
# meters to right side (x+)
FINAL_SIDE_RIGHT_THR = 0.05
# +1 (takes previous into account)
FINAL_SIDE_CNT_MAX = 1
# m. Transformation of coordinate frame from camera to temp.sensor on Y-
Y_DIST_CAMERA_TO_TEMP = -0.059
# m. Transformation of coordinate frame from camera to temp.sensor on X+
X_DIST_CAMERA_TO_TEMP = 0.04
# m.Transformation of coordinate frame from camera to temp.sensor on Z+
Z_DIST_CAMERA_TO_TEMP = 0.065
#==========================================

#======= MOVING NOFEVER VARIABLES =========
# meters. Nofever moves to default height when initializes and when going into standby mode. Measured from the ground to temperature horn. 
LINAK_DEFAULT_HEIGHT = 1.75
# seconds. Timer for rebooting the system if initialization fails.
REBOOT_TIMER_MAX = 45
# How many init_modules() iterations to do before doing full system restart 
RESET_MAX = 10
# seconds. When algorithm has no human detections -> checks connection to HW with this value intervals.
TIMER_INACTIVITY_CYCLE = 1
# seconds. How many seconds have to pass with no new detections before going to a standby loop
TIMER_NO_NEW_DETECTIONS = 5
# Detection distance zone thresholds. . Zone 2: x < 0.5
# meters. Zone 1: 0.5 meters < detection < 2 meters
ZONE_1_DIST_THR = 2
# meters. Zone 2: detection < 0.5 meters
ZONE_2_DIST_THR = 0.5
# Variables used to keep "Result" screen active if user stays in front of it.
# meters. Must move away at least *this value* from previous forehead location for Result screen to be changed.
FOREHEAD_DELTA = 0.2
# meters. Must be within *this value* from the camera for Result screen to be active.
FOREHEAD_MIN_DIST = 0.5
# seconds. Timer that defines for how long the Result screen can stay if the user is stays in front of it.
FOREHEAD_AFK_TIMER = 20
# counter. How many YOLO scans without findings needed to break FOREHEAD_AFK_TIMER and turn Blue screen
MAX_RESET_SCREEN_NO_FINDINGS = 2
# seconds to keep "Result" screen active no matter what happens.
TIMER_RESULT_SCREEN_DELAY = 3
# Temperature measuring ranges of the human skin. Note: to get inner core body temperature, add +3C
# Measurements above *OVER_TMP value* will result in "ERROR temperature" result
OVER_TMP = 39
# Measurements above *RED_TMP value* but below *OVER_TMP value* will result in "RED FEVER temperature" result
RED_TMP = 35.6
# Measurements above *YELLOW_TMP value* but below *RED_TMP value* will result in "YELLOW SLIGHTLY ELEVATED temperature" result
YELLOW_TMP = 35.3
# Measurements above *GREEN_TMP value* but below *YELLOW_TMP value* will result in "GREEN GOOD temperature" result
# Measurements below *GREEN_TMP value will result in "BLUE COLD temperature" result
GREEN_TMP = 29
# counter. Defines how many times NoFever can measure BLUE before declaring final result
# Example. First BLUE measurement: "you are cold, try again!". Second BLUE measurement in a row: "you are cold, come back in 5 minutes"
CNT_TEMP_MAX_ATTEMPTS = 1
# counter. How many detections in a row must be in a required range in order to start measuremement block
# NOTE: # it is actually always +1 in total. Because takes dist_forehead_prev into account too (hard to explain).
FINAL_DIST_CNT_MAX = 2
# meters. Distance within which a user must stay in order to start measuremement block
FINAL_DIST_THR = 0.4
# After moving to final_height, the next 'FINAL_HEIGHT_MAX value' number of measurements must remain
# counter. in the same final_height zone, not computing another final height.
FINAL_HEIGHT_MAX = 1
# seconds. How many seconds to scan. Temp speed 10scans/sec, mask speed (jetson) 1 scan per sec
TIMER_TEMP_AND_MASK_LOOP = 2

[label_printer]
# Language of contents on the printed ticket. Currently available: dk, en. Check ticket_printer.py for whats available.
CHOSEN_LANGUAGE = dk
# pixels. This is a native size for 62mm wide roll
TICKET_LENGTH = 696
# pixels. Don't know if native size but it works just fine.
TICKET_WIDTH = 300
# device address format used by pysub library. 0x04f9:0x2042 is ID (check by 'lsusb' in console)
DEVICE_NAME = usb://0x04f9:0x2042
# name defined in brother_ql library for our printer.
PRINTER_MODEL = QL-700
# roll size. We currently use 62mm x infinite
LABEL_SIZE = 62
# brother_ql supports 3 different backend, we use pyusb.
BACKEND = pyusb
# seconds. Printer write timeout. Occurs when lid is open, or no paper left, or paper is not pushed to feeder.
PRINT_TIMEOUT = 3000
# pixels. Max length of an image printed in the ticket. Will attempt to resize to this if original is larger
MAX_IMG_LENGTH_IN_TICKET = 250
# pixels. Max width of an image printed in the ticket. Will attempt to resize to this if original is larger
MAX_IMG_WIDTH_IN_TICKET = 250

[utils]
# How many megabytes of log data to store before overwriting it.
LOG_FILE_MAX_SIZE_MB = 100
# string. Device name used by Jetson Nano to enable/disable ethernet connection. Command: 'nmcli dev connect eth1'
INTERNET_DEVICE_NAME = eth1
# string. Relative (to nofever root) path where to save log file.
LOG_PATH = log/system_log.log

[realsense]
# in pixels. Image width.
RS_IMG_WIDTH = 640
# in pixels. Image height.
RS_IMG_HEIGHT = 480
# in frames per second (fps). Camera framerate.
RS_FRAMERATE = 15
# in microseconds. Timeout timer if fresh img is not retrieved from camera.
RS_GET_FRAME_TIMEOUT = 2000
# in meters. Depth data cut-out filter. Any depth point below this value will be converted to 'None'
RS_DIST_FILTER_MIN = 0.2
# same idea as RS_DIST_FILTER_MIN. NOTE: We set it ~20-30% higher than IGNORE_DIST_FAR in forehead_scanner section.
RS_DIST_FILTER_MAX = 2.5
# in megabytes. Upon reaching this limit, will delete the oldest saved image to create space for newly created image.
MAX_IMAGE_FOLDER_STORAGE_SIZE = 100

[linak]
# 5.90cm foot/base height in NoFever prototype v3.
FOOT_HEIGHT = 590
# 68.50cm foot/base to head (linak length) in NoFever prototype v3.
NECK_HEIGHT = 6850
# 34.90cm head casing height in NoFever prototype v3
HEAD_HEIGHT = 3490
# 5.90cm camera to temperature sensor height in NoFever prototype v3
HORN_HEIGHT = 590
# NOTE absolute height 1.1540 meters is the lowest possible for #Nofever v3 and is equal to 0 distance for Linak.
# WARNING: don't hold hands on Linak when it moves! Can squeeze hands.
NOFEVER_ABSOLUTE_MINIMUM_HEIGHT = 11540
# 1.95 meters. Max height NoFever can go up, measuring from floor to temperature sensor.
MAX_DISTANCE_abs = 19500
# 1.25 meters. Min height NoFever can go down, measuring from floor to temperature sensor.
MIN_DISTANCE_abs = 12500
# seconds to wait for Linak to finish the motion, otherwise, assert "no connection" error.
WAIT_MOTION_TIMEOUT = 20

[temperature_scanner]
# IMPORTANT! True = using MLX through Jetson. False = using MLX through arduino. TODO: remove this when arduino is compeltely eliminated
MLX_JETSON_ENABLED = True
# number of last temp.measurements to use for computing average in an average sliding window.
TMP_SLIDING_WINDOW_RANGE = 4

[forehead_scanner]
# ======================= ForeheadFinder variables =======================
# labels of classes used in NoFever YOLOv5 model for facial features.
LABEL_EYE = human eye
LABEL_LEFT_EYE = left eye
LABEL_RIGHT_EYE = right eye
LABEL_HEAD = human head
LABEL_NOSE = human nose
LABEL_MOUTH = human mouth
LABEL_GLASSES = glasses
LABEL_SUNGLASSES = sunglasses
# in meters. Range boundaries. NoFever will react only on users whose forehead is located WITHIN these boundaries.
# x-distance (negative)
IGNORE_DIST_LEFT = -0.3
# x-distance (positive)  
IGNORE_DIST_RIGHT = 0.3
# z-distance (always positive)
IGNORE_DIST_FAR = 2
# z-distance (always positive)
IGNORE_DIST_CLOSE = 0.15
# size of a square in pixels. Area used around center point of a bounding box (detection) in computation of depth data.
FACE_BB_CENTER_ROI = 3
# Standard Deviation unit. Used to filter outlier values in average computation of depth point (LOOK: get_xyz_bounding_box() function)
CENTER_ROI_UPPER_STD = 1
# Standard Deviation unit. Used to filter outlier values in average computation of depth point (LOOK: get_xyz_bounding_box() function)
CENTER_ROI_LOWER_STD = 1
# in meters. Minimum distance between two eye detections to consider it as 'eye pair'
DIST_EYE_PAIR_MIN = 0.025
# in meters. Maximum distance between two eye detections to consider it as 'eye pair'
DIST_EYE_PAIR_MAX = 0.08
# in meters. Maximum distance between two facial feature detections to consider it as part of the same head.
DIST_SAME_HEAD = 0.2
# If set to False -> will discard all 'human head' ONLY if there are other detections like 'human eye'.
INCLUDE_HEAD = False
# If set to False -> will discard all 'human nose' ONLY if there are other detections like 'human eye'.
INCLUDE_NOSE = False
# in meters. Offsets from a bounding box center point of a facial feature detection to the center of the forehead.
EYE_FOREHEAD_OFFSET = 0.035
HEAD_FOREHEAD_OFFSET = 0.06
NOSE_FOREHEAD_OFFSET = 0.055
MOUTH_FOREHEAD_OFFSET = 0.11
GLASSES_FOREHEAD_OFFSET = 0.04
SUNGLASSES_FOREHEAD_OFFSET = 0.04
# ======================= ForeheadSession variables =======================
# number of detections. Minimum GOOD forehead heights (values) needed to start estimating final height.
MIN_VALUES_FINAL_HEIGHT = 2
# meters. Within which distance largest and smallest height must be in to count it towards "final height".
DIFF_MIN_MAX_HEIGHT = 0.05
# meters. Distance difference from previous "final height" to accept new "final height".
DIFF_AVG_HEIGHT = 0.03
# meters. Two consecutive forehead heights must be within this distance from each other.
CONSECUTIVE_HEIGHT_DIFF = 0.15

[mask_scanner]
# labels of classes used in NoFever YOLOv5 model for mask status detection.
LABEL_MASK = mask_on
LABEL_NOMASK = mask_off
LABEL_WRONGMASK = mask_wrong
# ======================= MaskFinder variables =======================
# size of a square in pixels. Area used around center point of a bounding box (detection) in computation of depth data.
MASK_BB_CENTER_ROI = 3
# meters. Mask detections that are further away from the camera than this value will be discarded.
MASK_MAX_DISTANCE = 0.5
# meters. Detections located closer to each other  than this value are counted as part of the same head.
MASK_DIST_THRESHOLD = 0.1
# ======================= MaskSession variables =======================
# ratio from 0 to 1. Minimum proportion of combined detections 'mask_wrong' out of total to consider mask status = mask_wrong
RATIO_MASK_WRONG = 0.1
# ratio from 0 to 1. Minimum proportion of combined detections 'mask_on' out of total to consider mask status = mask_on
RATIO_MASK_ON = 0.8
# ratio from 0 to 1. Minimum proportion of combined detections 'mask_off' out of total to consider mask status = mask_off
RATIO_MASK_OFF = 0.1
# ratio from 0 to 1. Minimum confidence of combined detections 'mask_wrong' out of total to consider mask status = mask_wrong
CONF_MASK_WRONG = 0.3
# ratio from 0 to 1. Minimum confidence of combined detections 'mask_on' out of total to consider mask status = mask_on
CONF_MASK_ON = 0.3
# ratio from 0 to 1. Minimum confidence of combined detections 'mask_off' out of total to consider mask status = mask_off
CONF_MASK_OFF = 0.3
# ratio from 0 to 1. Weight of averaged confidence of combined detections of a class. Used to compute one final "confidence".
AVG_CONF_RATIO = 0.5
# ratio from 0 to 1. Weight of maximum confidence among detections of a class. Used to compute one final "confidence".
# NOTE: AVG_CONF_RATIO + MAX_CONF_RATIO should be equal to 1.
MAX_CONF_RATIO = 0.5

[arduino_serial]
# Serial communication baudrate between Jetson and Arduino
BAUDRATE = 9600
# seconds. Serial read timeout between Jetson and Arduino
READ_TIMEOUT = 0.4
# seconds. Serial write timeout between Jetson and Arduino
WRITE_TIMEOUT = 0.4
# seconds. Another serial read loop timeout. DEV NOTE: not sure if this needed.
LOOP_TIMEOUT = 1 

; DEV-NOTE: Don't know how to import utils.py from nofever/detection/yolov5 sub-sub directory...
; [yolo]
; # Path to YOLOv5 weighs for facial features detection.
; WEIGHTS_FACE = 'weights/face_w_glasses_yolov5s_e300_default_hyp.pt'
; # Path to YOLOv5 weighs for mask status detection.
; WEIGHTS_MASK = 'weights/mask_yolov5m_e300_evolved_hyp.pt'
; # ratio from 0 to 1. Discards detection with confidence less than this value.
; DETECTION_CONFIDENCE_THRESHOLD = 0.20
; # ratio from 0 to 1. Discards detections with Intersection-over-Union less than this value.
; IOU_THRESHOLD = 0.6
; # Width/heiht of images. Predictor will convert source images to this resolution (smaller -> faster, but less)
; IMG_SIZE = 448 